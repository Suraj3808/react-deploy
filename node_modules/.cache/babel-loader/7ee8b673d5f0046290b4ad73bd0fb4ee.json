{"ast":null,"code":"var _jsxFileName = \"F:\\\\react-application-project\\\\src\\\\SlotMach.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SlotM = props => {\n  //  let x = props.x;\n  //  let y = props.y;\n  //  let z = props.z;\n  let {\n    x,\n    y,\n    z\n  } = props;\n\n  if (x === y && y === z) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot_inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [x, y, z]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"This is matching\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot_inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [x, y, z]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"This is not  matching\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_c = SlotM;\nexport default SlotM;\n\nvar _c;\n\n$RefreshReg$(_c, \"SlotM\");","map":{"version":3,"sources":["F:/react-application-project/src/SlotMach.jsx"],"names":["React","SlotM","props","x","y","z"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB;AACC;AACA;AACC,MAAI;AAAEC,IAAAA,CAAF;AAAKC,IAAAA,CAAL;AAAQC,IAAAA;AAAR,MAAcH,KAAlB;;AAEA,MAAKC,CAAC,KAAKC,CAAP,IAAcA,CAAC,KAAKC,CAAxB,EAA4B;AACxB,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA,qBACKF,CADL,EACQC,CADR,EACWC,CADX;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAgBH,GAjBD,MAkBK;AACD,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA,qBACKF,CADL,EACQC,CADR,EACWC,CADX;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAgBH;AACJ,CA1CD;;KAAMJ,K;AA4CN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst SlotM = (props) => {\r\n  //  let x = props.x;\r\n   //  let y = props.y;\r\n   //  let z = props.z;\r\n    let { x, y, z } = props;\r\n\r\n    if ((x === y) && (y === z)) {\r\n        return (\r\n            <>\r\n                <div className='slot_inner'>\r\n                    <h1>\r\n                        {x}{y}{z}\r\n                    </h1>\r\n\r\n                    <h1>This is matching</h1>\r\n                    <hr />\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <>\r\n                <div className='slot_inner'>\r\n                    <h1>\r\n                        {x}{y}{z}\r\n                    </h1>\r\n\r\n                    <h1>This is not  matching</h1>\r\n                    <hr />\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SlotM;"]},"metadata":{},"sourceType":"module"}