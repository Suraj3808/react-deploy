{"ast":null,"code":"var _jsxFileName = \"F:\\\\react-application-project\\\\src\\\\App1.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App1 = () => {\n  _s();\n\n  let newTime = new Date().toLocaleTimeString();\n  const [ctime, setCtime] = useState(newTime);\n\n  const updateTime = () => {\n    newTime = new Date().toLocaleTimeString();\n    setCtime(newTime);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Time \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(App1, \"xQ1nzcFQY0FVDL/fS77EGzSNn7k=\");\n\n_c = App1;\nexport default App1;\n\nvar _c;\n\n$RefreshReg$(_c, \"App1\");","map":{"version":3,"sources":["F:/react-application-project/src/App1.jsx"],"names":["React","useState","App1","newTime","Date","toLocaleTimeString","ctime","setCtime","updateTime"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAGA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEf,MAAIC,OAAO,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAd;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACE,OAAD,CAAlC;;AAEA,QAAMK,UAAU,GAAG,MAAM;AACrBL,IAAAA,OAAO,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAV;AACAE,IAAAA,QAAQ,CAACJ,OAAD,CAAR;AAEH,GAJD;;AAKA,sBACI;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAOH,CAlBD;;GAAMD,I;;KAAAA,I;AAoBN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n\r\nconst App1 = () => {\r\n      \r\n    let newTime = new Date().toLocaleTimeString();\r\n    \r\n    const [ctime, setCtime] = useState(newTime);\r\n    \r\n    const updateTime = () => {\r\n        newTime = new Date().toLocaleTimeString();\r\n        setCtime(newTime);\r\n\r\n    };\r\n    return (\r\n        <>\r\n            <h1> Time </h1>\r\n            \r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default App1;"]},"metadata":{},"sourceType":"module"}